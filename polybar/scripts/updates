#!/bin/sh
out() { echo " $@  %{B$BACKGROUND F$BACKGROUND}|%{B$BACKGROUND_ALT F-}  "; }
waitonline() {
	out ..\?
	for i in $(seq 1 30); do
		ping -c1 archlinux.org >/dev/null 2>&1 && break; sleep 2
	done
}
cache="$POLYBAR_RUN/updates"
force() { ps -p $sleep_pid >/dev/null && kill $sleep_pid; }
iterate() {
	force
	touch "$cache.skip"
	[ -s "$cache" ] || exit
	grep -q ERROR "$cache" && exit
	while read p; do
		# Highlight important packges: kernel coreutils
		p=$(echo $p|cut -d\  -f1)
		echo $p|egrep -q linux\|coreutils && p="%{T2}$p"
		out "$p"
		sleep .5
	done <"$cache"
}
trap 'force; exit' INT
trap force USR2 EXIT
trap iterate USR1
while true; do
	[ -f "$cache.skip" ] || { waitonline; out ...; }
	rm -f "$cache.skip"
	[ -f "$cache" ] || checkupdates 2>&1 >"$cache"
	(
		PKGS=$(cat "$cache"|wc -l)
		[ $PKGS -eq 0 ] && { echo; exit; }
		[ $PKGS -eq 1 ] && [ "$(cat "$cache")" = '==>' ] &&
			{ out '%{T2}?'; exit; }
		[ $PKGS -ge 20 ] && PKGS="%{T2}$PKGS!"
		out "$PKGS"
	)
	sleep 30m & sleep_pid=$!
	wait
	[ -f "$cache.skip" ] || rm -f "$cache"
done
