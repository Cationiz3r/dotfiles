#!/bin/sh
_self=$(basename "$0")
_err() { >&2 echo "_self: err: $@!"; exit 1; }

conf_file="$XDG_CONFIG_HOME/_custom/snaplight.conf"
get_bright() { cat $scr_file; }
get_bright_detail() {	echo "$(get_bright) $(get_max) $(($(get_bright)*100/$(get_max)))%"; }
get_max() {	cat "$scr_max"; }
set_bright() { echo "$1" > $scr_file; }
chk_config() {
	[ -r "$conf_file" ] || _err 'Unable to read config file'
	. "$conf_file"
	[ -z "$levels" ] && _err 'Empty levels'
	echo "$levels"|grep -Eq '^([0-9]+ )+[0-9]+$' || _err 'Invalid levels'
}
notify_light() {
	>/dev/null 2>&1 xset q || exit
	local percent=$(($(get_bright)*100/$(get_max)))
	local msg="$percent%"
	dunstify -h string:x-dunst-stack-tag:snaplight -h int:value:$percent \
		-a brightness -u low -t 500 "$msg"
}

snap() {
	current=$(get_bright)
	set=$current
	for i in $levels; do
		([ $i -ge $current ] && [ $1 = down ]) && break
		([ $i -gt $current ] && [ $1 = up   ]) && { set=$i; break; }
		set=$i
	done
	set_bright $set
	notify_light & exit
}

chk_config
case "$1" in
-u) snap up;;
-d) snap down;;
esac

echo "$1"|grep -Eq ^[0-9]+$ && { set_bright $1; exit; }
get_bright_detail
